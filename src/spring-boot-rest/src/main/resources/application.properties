

##
## [ Database Configuration Section ]
##
# liquibase.change-log=classpath:migrations/migrations-master.xml
liquibase.change-log=classpath:test-migrations.xml

# spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.driver-class-name=org.h2.Driver



spring.datasource.url=jdbc:h2:mem:playground_mem;AUTO_RECONNECT=TRUE

spring.datasource.username=sa
spring.datasource.password=


spring.datasource.platform=h2
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
# spring.datasource.max-active=50
# Validate the connection before borrowing it from the pool.
spring.datasource.test-on-borrow=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


##
## JPA
##
# spring.jpa.database=POSTGRESQL
spring.jpa.database=H2
# Show or not log for each sql query
spring.jpa.show-sql=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database

# spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.h2geodb.GeoDBDialect
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
# spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
# spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.postgis.PostgisDialect

spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.cache.use_query_cache=false
#spring.jpa.properties.hibernate.generate_statistics=true

spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
spring.jpa.properties.hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider

##
## A solution to resolve the "LazyInitializationException" with H2 in memory Database
## NOT A PRODUCTION SOLUTION
##
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


# spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy


## none, validate, update, create, create-drop.
spring.jpa.hibernate.ddl-auto=create-drop


##
## [ Security ]
##

## OAUTH Security Configuration
## Service OAUTH Access Configuration
security.oauth2.client.client-id=deliverytracker-backend
security.oauth2.client.client-secret=a04f138e-8062-47bd-9139-363971acf474

## Authorization Server Locations
## OAuth2 Authorization Endpoint
security.oauth2.client.user-authorization-uri=http://localhost:18080/auth/realms/local/protocol/openid-connect/auth
## Oauth2 Token Endpoint
security.oauth2.client.access-token-uri=http://localhost:18080/auth/realms/local/protocol/openid-connect/token

## Token validation and information retrieval point
security.oauth2.resource.token-info-uri=http://localhost:18080/auth/realms/local/protocol/openid-connect/token/introspect

## JWT Authentication Server Public Keys
security.oauth2.resource.jwk.key-set-uri=http://localhost:18080/auth/realms/local/protocol/openid-connect/certs



##
## SWAGGER
##
swagger.oauth.client-id=swagger-client
swagger.oauth.client-secret=fc1cb6ad-ee8d-4d9b-aa43-b9fbb770ee60



# Set the error path (this is actually the default).
#
# Spring boot assumes the fallback error page maps to /error. You can set this
# property to specify an alternative mapping.
# If using a SimpleMappingExceptionResolver, make sure it's defaultErrorView
# corresponds to the same page (see Boot's ErrorMvcAutoConfiguration for more
# details).
server.error.path=/error



# Enable logging for Spring Web
logging.level.org.springframework.web=DEBUG